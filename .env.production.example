# Production Environment Variables Template
# Copy this to .env.production and fill in your actual values
# NEVER commit the actual .env.production file to version control

# ============================================
# REQUIRED: Core Services
# ============================================

# OpenRouter API (Get key from https://openrouter.ai/keys)
OPENROUTER_API_KEY=sk-or-v1-YOUR_OPENROUTER_API_KEY_HERE

# Security - MUST CHANGE
SECRET_KEY=740f8df2c48db74d2ce99d4a58f00d67f939c9142b53cb1972a1a153f7743685  # Generate new: openssl rand -hex 32

# PostgreSQL Database - MUST USE STRONG PASSWORDS
DATABASE_URL=postgresql://sgd_prod_user:STRONG_PASSWORD_HERE@postgres:5432/sgd_production_db
POSTGRES_USER=sgd_prod_user
POSTGRES_PASSWORD=STRONG_PASSWORD_HERE  # Example: Ie0/+W7eW5YsJGUjLeq7nA==
POSTGRES_DB=sgd_production_db

# Redis Cache
REDIS_URL=redis://:REDIS_PASSWORD_HERE@redis:6379/0  # Add password in production
REDIS_PASSWORD=STRONG_REDIS_PASSWORD_HERE

# Qdrant Vector Database
QDRANT_URL=http://qdrant:6333
QDRANT_API_KEY=STRONG_QDRANT_API_KEY_HERE  # Generate: openssl rand -hex 32

# ============================================
# PRODUCTION STORAGE (Choose one)
# ============================================

# Option 1: Cloudflare R2 (Recommended for production)
R2_ACCOUNT_ID=YOUR_CLOUDFLARE_ACCOUNT_ID
R2_ACCESS_KEY_ID=YOUR_R2_ACCESS_KEY
R2_SECRET_ACCESS_KEY=YOUR_R2_SECRET_KEY
R2_BUCKET=sgd-production-assets
S3_ENDPOINT_URL=https://YOUR_ACCOUNT_ID.r2.cloudflarestorage.com

# Option 2: AWS S3
# AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY
# AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_KEY
# AWS_DEFAULT_REGION=us-east-1
# S3_BUCKET=sgd-production-assets

# ============================================
# AUTHENTICATION (Highly Recommended)
# ============================================

# Clerk Authentication (Get from https://clerk.dev)
CLERK_PUBLISHABLE_KEY=pk_live_YOUR_CLERK_PUBLISHABLE_KEY
CLERK_SECRET_KEY=sk_live_YOUR_CLERK_SECRET_KEY
CLERK_JWKS_URL=https://YOUR_APP.clerk.accounts.dev/.well-known/jwks.json
CLERK_ISSUER=https://YOUR_APP.clerk.accounts.dev

# NextAuth (Alternative to Clerk)
# NEXTAUTH_URL=https://your-domain.com
# NEXTAUTH_SECRET=YOUR_NEXTAUTH_SECRET  # Generate: openssl rand -base64 32

# ============================================
# OBSERVABILITY & MONITORING
# ============================================

# Langfuse (Get from https://cloud.langfuse.com)
LANGFUSE_PUBLIC_KEY=pk-lf-YOUR_PUBLIC_KEY
LANGFUSE_SECRET_KEY=sk-lf-YOUR_SECRET_KEY
LANGFUSE_HOST=https://cloud.langfuse.com

# Sentry Error Tracking
SENTRY_DSN=https://YOUR_SENTRY_DSN@sentry.io/YOUR_PROJECT_ID
SENTRY_ENVIRONMENT=production

# ============================================
# OPTIONAL SERVICES
# ============================================

# Google Document AI
# GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp.json
# DOC_AI_PROCESSOR_ID=projects/YOUR_PROJECT/locations/us/processors/YOUR_PROCESSOR

# Cloudflare CDN
CLOUDFLARE_ACCOUNT_ID=YOUR_CLOUDFLARE_ACCOUNT_ID
CLOUDFLARE_WORKER_SIGNER_SECRET=YOUR_SIGNING_SECRET

# Kong API Gateway
KONG_ADMIN_URL=http://kong:8001
KONG_ADMIN_TOKEN=YOUR_KONG_ADMIN_TOKEN

# ============================================
# SERVICE CONFIGURATION
# ============================================

SERVICE_NAME=sgd-api
SERVICE_ENV=production
SERVICE_REGION=us-east-1
LOG_LEVEL=INFO  # Use WARNING for production after testing

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=false  # MUST be false in production
API_WORKERS=4  # Adjust based on CPU cores

# Security Settings
ALLOWED_HOSTS=your-domain.com,api.your-domain.com
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com
REF_URL_ALLOW_HOSTS=your-domain.com,*.your-domain.com
SECURE_COOKIES=true
CSRF_PROTECTION=true

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=30
RATE_LIMIT_PER_USER=1000  # Daily limit per user

# ============================================
# AI MODEL CONFIGURATION
# ============================================

# Model Selection (via OpenRouter)
PLANNER_MODEL=openai/gpt-4o
CRITIC_MODEL=anthropic/claude-3.5-sonnet
DRAFT_MODEL=deepseek/deepseek-chat
IMAGE_MODEL=google/gemini-2.0-flash-exp

# Cost Controls (USD)
MAX_COST_PER_RENDER=0.10
MAX_COST_PER_CRITIQUE=0.02
MAX_COST_PER_PLAN=0.02
MAX_COST_PER_INGEST=0.05
DAILY_COST_LIMIT=100.00  # Total daily limit
USER_DAILY_COST_LIMIT=10.00  # Per user daily limit

# ============================================
# CONTENT FILTERING & SAFETY
# ============================================

CONTENT_FILTER_ENABLED=true
NSFW_FILTER_ENABLED=true
PROFANITY_FILTER_ENABLED=true
PII_DETECTION_ENABLED=true  # Detect personal information
SYNTHID_VERIFICATION_ENABLED=true  # Verify AI-generated content

# ============================================
# DEPLOYMENT SETTINGS
# ============================================

# Domain Configuration
DOMAIN=your-domain.com
API_DOMAIN=api.your-domain.com

# SSL/TLS
SSL_CERT_PATH=/etc/ssl/certs/your-cert.pem
SSL_KEY_PATH=/etc/ssl/private/your-key.pem
FORCE_HTTPS=true

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # 2 AM daily
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=sgd-backups

# ============================================
# NOTES
# ============================================
# 1. Generate all passwords and keys using strong random generators
# 2. Use different passwords for each service
# 3. Enable authentication before going to production
# 4. Set up monitoring and alerting
# 5. Configure backups and disaster recovery
# 6. Review and update rate limits based on expected traffic
# 7. Use environment-specific configuration files
# 8. Never expose this file or commit actual secrets