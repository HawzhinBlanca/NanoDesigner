[tool.poetry]
name = "sgd-api"
version = "1.0.0"
description = "Smart Graphic Designer API"
authors = ["Gemini"]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
fastapi = "^0.111.0"
uvicorn = "^0.27.1"
pydantic = "^2.6.1"
httpx = "^0.26.0"
boto3 = "^1.34.131"
redis = "^5.0.4"
jsonschema = "^4.22.0"
google-cloud-documentai = "^2.25.0"
unstructured = "^0.15.12"
tenacity = "^8.4.1"
qdrant-client = "^1.11.0"
python-multipart = "^0.0.9"
psycopg2-binary = "^2.9.9"
psutil = "^6.0.0"
langfuse = "^2.51.8"
guardrails-ai = "^0.5.10"
pyjwt = "^2.8.0"
cryptography = "^42.0.8"
sentence-transformers = "^3.0.1"
websockets = "^13.1"
python-json-logger = "^2.0.7"
alembic = "^1.12.0"
sqlalchemy = "^2.0.0"
pytector = "==0.1.3"
clamd = {version = "^1.0.2", optional = true}
python-magic = {version = "^0.4.27", optional = true}
Pillow = {version = "^10.4.0", optional = true}
opentelemetry-sdk = {version = "^1.25.0", optional = true}
opentelemetry-exporter-otlp-proto-http = {version = "^1.25.0", optional = true}
opentelemetry-instrumentation-fastapi = {version = "^0.46b0", optional = true}
opentelemetry-instrumentation-httpx = {version = "^0.46b0", optional = true}
prometheus-client = "^0.20.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
ruff = "^0.0.292"
mypy = "^1.5.0"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["app/tests", "tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"
addopts = [
    "-v",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=95"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 100
target-version = ['py312']

[tool.ruff]
line-length = 100
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E501", "B008"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
disallow_untyped_defs = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
security = ["pytector", "clamd", "python-magic", "Pillow"]
observability = ["opentelemetry-sdk", "opentelemetry-exporter-otlp-proto-http", "prometheus-client", "opentelemetry-instrumentation-fastapi", "opentelemetry-instrumentation-httpx"]
